name: CI

env:
  QT_VERSION:     "5.13.0"
  MINGW_VERSION:  "win64_mingw73"
  MINGW_PATH:     "mingw73_64"
  
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Windows Latest x64",
            artifact: "Windows-x64.zip",
            os: windows-latest,
          }

    steps:
      - name: Print working directory on runner
        run: Get-Location

      - uses: actions/checkout@v2

      - name: Check mingw g++ version
        run: |
          Write-Output (Get-Command g++.exe).Path
          g++.exe --version        

      - name: Install correct version of mingw
        run: |
          choco uninstall mingw --force
          choco uninstall strawberryperl --force
          choco install mingw --version=7.3.0 
          #choco install qt-sdk-windows-x86-mingw_opengl

      - name: Check mingw directory
        run: |
          ls C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          host: windows
          version: ${{ env.QT_VERSION }}
          arch: ${{ env.MINGW_VERSION }}
          #modules: 'qtcore'
          extra: --external 7z

      - name: Set path and refresh
        run: |
          echo "d:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin" >> $GITHUB_PATH
          refreshenv
          #Write-Output (Get-Command g++.exe).Path
          #g++.exe --version

      - name: Check availability of libraries
        working-directory: D:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/lib/
        run: |
          ls
          ls D:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin/
      - name: Check QMake and make
        run: |
          Write-Output (Get-Command qmake.exe).Path
          qmake.exe -version
          #Write-Output (Get-Command mingw32-make.exe).Path
          #mingw32-make.exe -version

      - name: Prepend path
        run: echo "d:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin" >> $GITHUB_PATH

      - name: Check QMake and make after prepend path
        run: |
          Write-Output (Get-Command qmake.exe).Path
          qmake.exe -version
          #Write-Output (Get-Command mingw32-make.exe).Path
          #mingw32-make.exe -version

      - name: Qmake and make
        working-directory: d:/a/CocktailCalc/CocktailCalc
        run: | 
          qmake.exe CocktailCalc.pro -spec win32-g++ "CONFIG+=release" #"LIBS += D:\a\CocktailCalc\Qt\${{ env.QT_VERSION }}\${{ env.MINGW_PATH }}\lib\libQt5Cored.a"
          mingw32-make.exe qmake_all

      - name: Check QMake and make, g++
        run: |
          Write-Output (Get-Command qmake.exe).Path
          qmake.exe -version
          Write-Output (Get-Command mingw32-make.exe).Path
          mingw32-make.exe -version
          Write-Output (Get-Command g++).Path
          ls (Get-Command g++.exe).Path
          g++.exe --version
          
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores          

      - name: Make mingw32
        working-directory: d:/a/CocktailCalc/CocktailCalc
        run: |
          mingw32-make.exe -j${{ steps.cpu-cores.outputs.count }}
          Get-Location
          ls
      
      - name: prepare release
        run: |
          cp D:\a\CocktailCalc\Qt\${{ env.QT_VERSION }}\${{ env.MINGW_PATH }}\bin\QT5Core.dll D:/a/CocktailCalc/CocktailCalc/release
          cp D:\a\CocktailCalc\Qt\${{ env.QT_VERSION }}\${{ env.MINGW_PATH }}\bin\QT5Gui.dll D:/a/CocktailCalc/CocktailCalc/release

      - name: upload artifact release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.artifact }}
          path: D:/a/CocktailCalc/CocktailCalc/release
