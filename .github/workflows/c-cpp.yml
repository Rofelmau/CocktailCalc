name: CI

env:
  QT_VERSION:     "5.13.0"
  QT_CREATOR_VERSION: 4.11.0
  MINGW_VERSION:  "win64_mingw73"
  MINGW_PATH:     "mingw73_64"
  PLUGIN_PRO: CocktailCalc.pro
  PLUGIN_NAME: CocktailCalc
  
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Windows Latest x64",
            artifact: "Windows-x64.zip",
            os: windows-latest,
            host: windows,
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Linux Latest x64",
            artifact: "Linux-x64.zip",
            os: ubuntu-latest,
            host: linux
          }

    steps:
      - name: Print working directory on runner
        run: echo "${GITHUB_WORKSPACE}"

      - uses: actions/checkout@v2
      
      - name: Installing system libs
        shell: cmake -P {0}
        run: |
          if ("${{ runner.os }}" STREQUAL "Linux")
            execute_process(
              COMMAND sudo apt install libgl1-mesa-dev
            )
          endif()
          
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
    
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          host: ${{ matrix.config.host }}
          version: ${{ env.QT_VERSION }}
          arch: ${{ env.MINGW_VERSION }}
          extra: --external 7z

      - name: Set path and refresh
        run: |
          echo "d:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin" >> $GITHUB_PATH

      - name: Prepend path
        run: |
          echo "d:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/mingw73_32/bin" >> $GITHUB_PATH
  
      - name: Qmake and make
        run: | 
          qmake.exe CocktailCalc.pro -spec win32-g++ "CONFIG+=release" #"LIBS += D:\a\CocktailCalc\Qt\5.12.7\mingw73_32\lib\libQt5Cored.a"
          mingw32-make.exe qmake_all

      - name: Build
        shell: cmake -P {0}
        run: |
          if ("${{ runner.os }}" STREQUAL "Windows")
            set(ENV{PATH} "${{ steps.qt.outputs.qt_dir }}/bin/;$ENV{PATH}")
          else()
            set(ENV{PATH} "${{ steps.qt.outputs.qt_dir }}/bin/:$ENV{PATH}")
            set(ENV{LD_LIBRARY_PATH} "qtcreator/lib/Qt/lib:$ENV{LD_LIBRARY_PATH}")
          endif()
          include(ProcessorCount)
          ProcessorCount(N)
          set(make_program make -j ${N})
          if ("${{ runner.os }}" STREQUAL "Windows")
            set(make_program "qtcreator/bin/jom")
          endif()
          execute_process(
            COMMAND ${make_program}
            RESULT_VARIABLE result
          )
          if (NOT result EQUAL 0)
            message(FATAL_ERROR "Bad exit status")
          endif()
          file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}/$ENV{PLUGIN_NAME}-$ENV{QT_CREATOR_VERSION}-${{ matrix.config.artifact }}" artifact)
          execute_process(COMMAND
            ${CMAKE_COMMAND} -E tar cvf ${artifact} --format=zip "${{ steps.qt_creator.outputs.qtc_binary_name }}"
            WORKING_DIRECTORY "${{ steps.qt_creator.outputs.qtc_output_directory }}"
          )
      
      - name: prepare release
        run: |
          cp D:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin/QT5Core.dll ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
          cp D:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin/QT5Gui.dll ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
          cp D:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin/Qt5Network.dll ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
          cp D:/a/CocktailCalc/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin/Qt5Widgets.dll ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
          rm ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}e/*.so
          rm ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}/*.h 
          rm ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}/*.cpp 

      - name: upload artifact release
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ env.PLUGIN_NAME }}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
          name: ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
